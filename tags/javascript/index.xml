<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on On Software Development</title>
    <link>https://bilski.tech/tags/javascript/</link>
    <description>Recent content in Javascript on On Software Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 07 Jul 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bilski.tech/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Including JavaScript in HTML content</title>
      <link>https://bilski.tech/posts/including-javascript-in-html-content/</link>
      <pubDate>Tue, 07 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://bilski.tech/posts/including-javascript-in-html-content/</guid>
      <description>For the last couple of days, I was struggling with Java ServerFaces. The exact problem was, that commandButtons were working as expected, but commandLinks were not. We are using Apache MyFaces with Tomahawk and Sandbox components. We were going to use commandLinks for navigation and other uses like selecting nodes in Tomahawks&amp;rsquo; tree2 component, but we were forced to render commandButtons instead, which looked quite awkward in some places.
Symptoms we got, were that three browsers: Firefox, Opera and Konqueror, were complaining about &amp;ldquo;oamSubmitForm is not defined&amp;rdquo; after clicking a commandLink.</description>
    </item>
    
    <item>
      <title>Autowiring EJB 3.0 in Tomcat from remote JBoss</title>
      <link>https://bilski.tech/posts/autowiring-ejb-3.0-in-tomcat-from-remote-jboss/</link>
      <pubDate>Sat, 20 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://bilski.tech/posts/autowiring-ejb-3.0-in-tomcat-from-remote-jboss/</guid>
      <description>To be honest I&amp;rsquo;ve never fully understood EJB 2.x or written an application using that specification. Well, I&amp;rsquo;ve written some EJBs, but it was just following an example of different EJB in the same project. Even though we used Spring at that time nothing seemed simple and straightforward. Every time I wanted to use an EJB I had to modify several XML files to be able to inject EJB into some bean.</description>
    </item>
    
  </channel>
</rss>