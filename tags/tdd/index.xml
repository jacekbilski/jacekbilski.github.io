<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TDD on On Software Engineering</title>
    <link>https://www.bilski.tech/tags/tdd/</link>
    <description>Recent content in TDD on On Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 24 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bilski.tech/tags/tdd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TDD, where did it all go wrong by Ian Cooper</title>
      <link>https://www.bilski.tech/videos/tdd_where_did_it_all_go_wrong/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/videos/tdd_where_did_it_all_go_wrong/</guid>
      <description>Probably number two on my list. This video helped me greatly understand the concept of a &amp;ldquo;unit&amp;rdquo;. That in turn, combined with bounded context idea from DDD world and hexagonal architecture with its ports and adapters, changed my perspective on tests in general. I finally understood what is the scope of a unit test and how I was doing it wrong previously.
  </description>
    </item>
    
    <item>
      <title>Iteration 9 - custom functions</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-9-custom-functions/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-9-custom-functions/</guid>
      <description>Welcome to the 9th iteration of WebCalc. Previously I managed to extract billing module from the app module and started differentiating users from one another. This time I&amp;rsquo;ll enable the users to define their own functions. To IDEs then.
But first I must apologize for what I&amp;rsquo;ve done last time. I coupled my User class with Spring&amp;rsquo;s UserDetails. It&amp;rsquo;s obvious to me now, in my face even. Apparently, it wasn&amp;rsquo;t back then.</description>
    </item>
    
    <item>
      <title>Iteration 8 - billing module extraction and differentiating users</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-8-billing-module-extraction-and-differentiating-users/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-8-billing-module-extraction-and-differentiating-users/</guid>
      <description>Welcome to the 8th iteration of WebCalc. Previously I promised to extract billing module from the app module and that&amp;rsquo;s what I&amp;rsquo;ll start with. To IDEs then.
There&amp;rsquo;s nothing really fancy about extracting this module. You can see the full commit 9f191153, but it really boils down to creating a new module and copying build.gradle from calculator module, adding it to settings.gradle, moving Billing and BillingShould to the new module and importing new module in the app module.</description>
    </item>
    
    <item>
      <title>Iteration 7 - billing</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-7-billing/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-7-billing/</guid>
      <description>Welcome to the 7th iteration of WebCalc. Previously I scratched a surface of users and security in order to start working on billing. In retrospective, I don&amp;rsquo;t think I needed any user and Spring Security at all for billing to work, at least not in the first phase. Luckily, their introduction didn&amp;rsquo;t require much and should not actually hurt. The plan for this iteration is to get the billing as far as possible in terms of functionality.</description>
    </item>
    
    <item>
      <title>Iteration 6 - introducing users</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-6-introducing-users/</link>
      <pubDate>Thu, 28 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-6-introducing-users/</guid>
      <description>Welcome to the 6th iteration of WebCalc. Previously I was dealing mostly with adding some more complex calculations. Like I mentioned there already, I think that I have already enough business logic to start moving into other areas like billing or user management. I also said that I&amp;rsquo;d be going into the unknown. Up until now, I had a rough idea of how to do things, now I don&amp;rsquo;t, I&amp;rsquo;ll be exploring a lot.</description>
    </item>
    
    <item>
      <title>Iteration 4 - fixes only</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-4-fixes-only/</link>
      <pubDate>Fri, 02 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-4-fixes-only/</guid>
      <description>Welcome to the fourth iteration of WebCalc implementation. Previously I added multiplication and division as operations supported by my WebCalc. Especially the latter one forced me to add and change a few things in the code. By doing so I think I&amp;rsquo;ve made a mistake, that I&amp;rsquo;ll fix now.
The problem was to make Calculator stateful, it now remembers maxFractionDigits. If one user would set maxFractionDigits, all others would see that changed too.</description>
    </item>
    
    <item>
      <title>Iteration 3 - formatting and cleanup in calculator module</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-3-formatting-and-cleanup-in-calculator-module/</link>
      <pubDate>Wed, 10 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-3-formatting-and-cleanup-in-calculator-module/</guid>
      <description>Welcome to the third iteration of WebCalc implementation. Previously I managed to get only basic operations working, namely addition and subtraction. This time I want to go further and add multiplication and division. Whereas multiplication should be pretty straightforward, I&amp;rsquo;m expecting issues with the division. Once I get these things working, I&amp;rsquo;ll see if I can improve the design of calculator itself and the tests. To IDE then.
Multiplication is, indeed, straightforward.</description>
    </item>
    
    <item>
      <title>Iteration 2 - actual calculations and modules separation</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-2-actual-calculations-and-modules-separation/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-2-actual-calculations-and-modules-separation/</guid>
      <description>Welcome to the second iteration of WebCalc implementation. Last time I managed only to get a basic construct working and only in a very crude way. Always returning &amp;ldquo;3&amp;rdquo; from a controller is hardly a proper solution. This time I&amp;rsquo;ll separate the app module from calculation one and then I&amp;rsquo;ll start digging into actual calculations.
But first, looking at Gradle files I&amp;rsquo;ve noticed a few unnecessary things. One thing is, that I&amp;rsquo;m specifying explicit versions for JUnit and REST-Assured, which, having Spring Boot, is not necessary.</description>
    </item>
    
    <item>
      <title>Iteration 1 - setting up with one test</title>
      <link>https://www.bilski.tech/posts/webcalc/iteration-1-setting-up-with-one-test/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/iteration-1-setting-up-with-one-test/</guid>
      <description>Welcome to the first iteration of WebCalc implementation. In my previous post I just explained my motivations and goals for this project. This time I&amp;rsquo;ll do some actual coding. Although in the end, I&amp;rsquo;ll try to have something &amp;ldquo;business&amp;rdquo; related, I guess most of the time I&amp;rsquo;ll spend wiring things up. To the keyboard then.
Goal I want to have a very first and simple test working: adding 1 to 2.</description>
    </item>
    
    <item>
      <title>Motivation and plan</title>
      <link>https://www.bilski.tech/posts/webcalc/motivation-and-plan/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/webcalc/motivation-and-plan/</guid>
      <description>My previous posts were rather theoretical, a lot of philosophy, very little code. This time I&amp;rsquo;ll do almost the opposite, I&amp;rsquo;ll be actually writing a little system before your eyes, so there will be a lot of code. I will be referring to some concepts I was writing about previously, but this time I&amp;rsquo;ll not be discussing them, just applying.
Motivation There are many reasons I want to do this:</description>
    </item>
    
  </channel>
</rss>
