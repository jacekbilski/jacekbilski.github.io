<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>automated testing on On Software Engineering</title>
    <link>https://www.bilski.tech/tags/automated-testing/</link>
    <description>Recent content in automated testing on On Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 22 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.bilski.tech/tags/automated-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tests organization and naming</title>
      <link>https://www.bilski.tech/posts/testing_primer/tests-organization-and-naming/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/testing_primer/tests-organization-and-naming/</guid>
      <description>Note, this post was originally published on INNOQ blog together with Torsten Mandry and Theo Pack.
As our system grows, so will our test suites. For our production code, we have learned techniques to keep it maintainable. For example, we try to structure our logic into sub-aspects, put them in specific locations and give the units meaningful names. We want to achieve the same for our tests. One of the main goals is that a developer - or generally speaking, the person who has to maintain the test - knows where to find which test.</description>
    </item>
    
    <item>
      <title>Test Strategy</title>
      <link>https://www.bilski.tech/posts/testing_primer/test-strategy/</link>
      <pubDate>Mon, 05 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/testing_primer/test-strategy/</guid>
      <description>Note, this post was originally published on INNOQ blog together with Torsten Mandry and Theo Pack.
In our previous posts, we focused on why and how we write tests. In most of our projects, there will be many of those tests. In the last post about tests granularity, we additionally stated that there usually will be different kinds of tests, on different levels of granularity. That leads to our next topic: which kinds of tests do we need and what is the ideal mix of them?</description>
    </item>
    
    <item>
      <title>Tests Granularity</title>
      <link>https://www.bilski.tech/posts/testing_primer/tests-granularity/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/testing_primer/tests-granularity/</guid>
      <description>Note, this post was originally published on INNOQ blog together with Torsten Mandry.
In two previous posts (see below) we discussed the benefits of automated tests and the properties of a good test. So far we were trying to avoid differentiating the tests in any way. This time we want to address one way how tests can be classified: tests granularity.
All posts in this series:
Why You Should Write Automated Tests Anatomy of a Good Test This post: Tests Granularity Test Strategy Tests Organization and Naming What is granularity?</description>
    </item>
    
    <item>
      <title>Anatomy of a Good Test</title>
      <link>https://www.bilski.tech/posts/testing_primer/anatomy-of-a-good-test/</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/testing_primer/anatomy-of-a-good-test/</guid>
      <description>Note, this post was originally published on INNOQ blog together with Torsten Mandry.
In our last post, we focused on why we should write tests and what value they provide. This time we will go far more technical and take a look at a single test. We will show what makes a test a good one and describe desired and unwanted properties. Interestingly enough, all those properties hold, no matter how isolated or integrated the test is.</description>
    </item>
    
    <item>
      <title>Why You Should Write Automated Tests</title>
      <link>https://www.bilski.tech/posts/testing_primer/why-you-should-write-automated-tests/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/testing_primer/why-you-should-write-automated-tests/</guid>
      <description>Note, this post was originally published on INNOQ blog together with Torsten Mandry.
This blog post gives an overview of the most common benefits gained by writing automated tests. It starts in a place where most of the projects weâ€™ve seen so far are: tests are written as a last step of the development process. Then it shows additional benefits that could be gained if we all gave the tests a bit more focus and care.</description>
    </item>
    
  </channel>
</rss>
