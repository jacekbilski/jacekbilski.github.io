<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>test scenarios on On Software Engineering</title>
    <link>https://www.bilski.tech/tags/test-scenarios/</link>
    <description>Recent content in test scenarios on On Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 16 Aug 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.bilski.tech/tags/test-scenarios/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Writing good test scenarios</title>
      <link>https://www.bilski.tech/posts/writing-good-test-scenarios/</link>
      <pubDate>Tue, 16 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.bilski.tech/posts/writing-good-test-scenarios/</guid>
      <description>On my current company&amp;rsquo;s blog I posted some time ago part one of &amp;ldquo;writing good tests&amp;rdquo;. Now it&amp;rsquo;s time to continue.
Last time I just barely scratched the topic of writing test scenarios. I briefly gave only a few hints like &amp;ldquo;avoid unnecessary information&amp;rdquo;, &amp;ldquo;don&amp;rsquo;t include implementation details&amp;rdquo; or &amp;ldquo;don&amp;rsquo;t repeat yourself in different scenarios&amp;rdquo;. This time I&amp;rsquo;d like to dig deeper and present results of discussions we had in the team.</description>
    </item>
    
  </channel>
</rss>