Index: app/src/test/java/com/webcalc/integration_tests/RestApiTest.java
===================================================================
--- app/src/test/java/com/webcalc/integration_tests/RestApiTest.java
+++ app/src/test/java/com/webcalc/integration_tests/RestApiTest.java
@@ -37,6 +37,11 @@
     assertEvalResultForSession(expression, "1,14286", session2);
   }

+  @Test
+  void canDoComplexCalculations() {
+    assertEvalResult("1 2 3 + +", "6");
+  }
+
   private void setMaxFractionDigitsForSession(int maxFractionDigits, SessionFilter session) {
     given()
         .filter(session)
Index: calculator/src/test/java/com/webcalc/calculator/CalculatorShould.java
===================================================================
--- calculator/src/test/java/com/webcalc/calculator/CalculatorShould.java
+++ calculator/src/test/java/com/webcalc/calculator/CalculatorShould.java
@@ -66,4 +66,14 @@
     String result = calculator.eval(input, maxFractionDigits);
     assertThat(result).isEqualTo(expectedResult);
   }
+
+  @DisplayName("Complex calculations")
+  @ParameterizedTest(name = "input: ''{0}'', expected result: ''{1}''")
+  @CsvSource({
+      "1 2 3 + +, 6",
+  })
+  void complexCalculations(String input, String expectedResult) {
+    String result = calculator.eval(input, Calculator.DEFAULT_MAX_FRACTION_DIGITS);
+    assertThat(result).isEqualTo(expectedResult);
+  }
 }
